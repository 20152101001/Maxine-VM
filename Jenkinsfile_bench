pipeline {
    agent any
    options {
        timestamps()
        timeout(time: 3, unit: 'HOURS')
    }
    tools {
        jdk 'openJDK8'
    }
    environment {
        //Change the first three variables
        USER_HOME="/localhome/regression"
        DJANGO="$USER_HOME/benchvisualizer/BenchVisualizer"
        DACAPO="$USER_HOME"
        SPECJVM2008="$USER_HOME/SPECjvm2008"

        MAXINE_HOME="$WORKSPACE/maxine"
        MX_HOME="$WORKSPACE/mx"
        MX="$MX_HOME/mx"
        LD_LIBRARY_PATH="$MAXINE_HOME/com.oracle.max.vm.native/generated/linux/"
    }

    stages {
        stage('clone') {
            steps {
                // Clean up workspace
                step([$class: 'WsCleanup'])
                dir(env.MAXINE_HOME) {
                    checkout scm
                }
                dir(env.MX_HOME) {
                    checkout([$class: 'GitSCM', branches: [[name: '5.190.3']], extensions: [[$class: 'CloneOption', shallow: true]], userRemoteConfigs: [[url: 'https://github.com/beehive-lab/mx.git']]])
                }
                // Trigger fetch of dependencies
                dir(env.MAXINE_HOME) {
                    sh '$MX help'
                }
            }
        }
        stage('build') {
            steps {
                dir(env.MAXINE_HOME) {
                        sh '$MX build'
                    }
            }
        }
        stage('image') {
            steps {
                dir(env.MAXINE_HOME) {
                        sh '$MX image'
                    }
            }
        }
        stage('DACAPO benchmarks') {
            steps {
                dir(env.DACAPO) {
                    sh '$MX --vm=maxine vm -jar dacapo-9.12-MR1-bach.jar avrora || true'
                    sh '$MX --vm=maxine vm -jar dacapo-9.12-MR1-bach.jar batik || true'
                    sh '$MX --vm=maxine vm -jar dacapo-9.12-MR1-bach.jar eclipse || true'
                    sh '$MX --vm=maxine vm -jar dacapo-9.12-MR1-bach.jar fop || true'
                    sh '$MX --vm=maxine vm -jar dacapo-9.12-MR1-bach.jar h2 || true'
                    sh '$MX --vm=maxine vm -jar dacapo-9.12-MR1-bach.jar jython || true'
                    sh '$MX --vm=maxine vm -jar dacapo-9.12-MR1-bach.jar luindex || true'
                    sh '$MX --vm=maxine vm -jar dacapo-9.12-MR1-bach.jar lusearch || true'
                    sh '$MX --vm=maxine vm -jar dacapo-9.12-MR1-bach.jar pmd || true'
                    sh '$MX --vm=maxine vm -jar dacapo-9.12-MR1-bach.jar sunflow || true'
                    sh '$MX --vm=maxine vm -jar dacapo-9.12-MR1-bach.jar tomcat || true'
                    sh '$MX --vm=maxine vm -jar dacapo-9.12-MR1-bach.jar tradebeans || true'
                    sh '$MX --vm=maxine vm -jar dacapo-9.12-MR1-bach.jar tradesoap || true'
                    sh '$MX --vm=maxine vm -jar dacapo-9.12-MR1-bach.jar xalan || true'
                }
            }
        }
        stage('SPECJVM benchmarks') {
            steps {
                dir(env.SPECJVM2008) {
                    sh 'timeout -s SIGINT 7m $MX --vm=maxine vm -jar SPECjvm2008.jar -wt 5s -it 5s -bt 2 startup || true'
                    sh 'timeout -s SIGINT 7m $MX --vm=maxine vm -jar SPECjvm2008.jar -wt 5s -it 5s -bt 2 compiler || true'
                    sh 'timeout -s SIGINT 7m $MX --vm=maxine vm -jar SPECjvm2008.jar -wt 5s -it 5s -bt 2 compress || true'
                    sh 'timeout -s SIGINT 7m $MX --vm=maxine vm -jar SPECjvm2008.jar -wt 5s -it 5s -bt 2 crypto || true'
                    sh 'timeout -s SIGINT 7m $MX --vm=maxine vm -jar SPECjvm2008.jar -wt 5s -it 5s -bt 2 derby || true'
                    sh 'timeout -s SIGINT 7m $MX --vm=maxine vm -jar SPECjvm2008.jar -wt 5s -it 5s -bt 2 mpegaudio || true'
                    sh 'timeout -s SIGINT 7m $MX --vm=maxine vm -jar SPECjvm2008.jar -wt 5s -it 5s -bt 2 scimark || true'
                    sh 'timeout -s SIGINT 7m $MX --vm=maxine vm -jar SPECjvm2008.jar -wt 5s -it 5s -bt 2 serial || true'
                    sh 'timeout -s SIGINT 7m $MX --vm=maxine vm -jar SPECjvm2008.jar -wt 5s -it 5s -bt 2 sunflow || true'
                    sh 'timeout -s SIGINT 7m $MX --vm=maxine vm -jar SPECjvm2008.jar -wt 5s -it 5s -bt 2 xml || true'
                }
            }
        }
        stage('db_update') {
            steps {
                dir(env.DJANGO) {
                   sh 'python manage.py addBenchToJob $JOB_NAME --get_jenkins_latest'
                }
            }
        }
    }


}
